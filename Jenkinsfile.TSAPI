pipeline {
    agent any

    parameters {
        string(name: 'BRANCH', defaultValue: 'main', description: 'The branch to locally clone, build and onboard to SeaLights')
    }

    stages {
        stage('SCM (Git)') {
            steps {
                cleanWs()
                git branch: params.BRANCH, url: 'https://github.com/ddreakford/calculator_REST_gradle.git'
            }
        }
        stage('Install/Configure SeaLights agent') {
            steps {
                echo "${STAGE_NAME}"
                withCredentials([string(credentialsId: 'SL_AGENT_TOKEN', variable: 'SL_TOKEN')]) {
                    sh '''
                        rm -rf sealights && mkdir sealights
                        wget -nv https://agents.sealights.co/sealights-java/sealights-java-latest.zip
                        unzip -o -d sealights sealights-java-latest.zip
                        rm sealights-java-latest.zip
                        echo "SeaLights agent version is:" `cat sealights/sealights-java-version.txt` "\n"
                        echo $SL_TOKEN > sealights/sltoken.txt
                        ls -l sealights
                        cat sealights/sltoken.txt
                    '''
                }
            }
        }
        stage('Create SL Build Session') {
            steps {
                sh '''
                    java -Dsl.ignoreCertificateErrors=true -jar sealights/sl-build-scanner.jar -config \
                        -tokenfile sealights/sltoken.txt \
                        -appname "Calculator-REST-TSAPI" \
                        -branchname "main" \
                        -buildname "SL_TIMESTAMP" \
                        -pi "*com.slsamples.gradle.java.springboot*" \
                        -buildsessionidfile sealights/buildSessionId.txt
                '''
            }
        }
        stage('Build App and Tests') {
            steps {
                sh '''
                    gradle classes testNGClasses
                '''
            }
        }
        stage('Scan App Build') {
            steps {
                sh '''
                    java -Dsl.ignoreCertificateErrors=true  -jar sealights/sl-build-scanner.jar -scan \
                        -tokenfile sealights/sltoken.txt \
                        -buildsessionidfile sealights/buildSessionId.txt \
                        -workspacepath "." -r \
                        -fi "build/classes/java/main/**/*.class" \
                        -fe "build/classes/java/test**/*.class"
                '''
            }
        }
        stage('Open Test Stage') {
            steps {
                echo "${STAGE_NAME}"
            }
        }
        stage('Run Tests') {
            steps {
                echo "${STAGE_NAME}"
                sh '''
                    gradle testNG
                '''
            }
        }
        stage('Upload Test Results') {
            steps {
                echo "${STAGE_NAME}"
            }
        }
        stage('Close Test Stage') {
            steps {
                echo "${STAGE_NAME}"
            }
        }
    }
}